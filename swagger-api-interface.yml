swagger: '2.0'
info:
  title: ToDoS API
  description: A simple ToDoS API supporting CRUD operations
  version: 1.0.0
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /todos:
    get:
      summary: Get all todos
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ToDoGet'
    post:
      summary: Create a new todo
      parameters:
        - name: todo
          in: body
          description: ToDo object
          required: true
          schema:
            $ref: '#/definitions/ToDoPost'
      responses:
        201:
          description: Successful operation
          schema:
            $ref: '#/definitions/ToDoGet'

  /todos/{order_number}:
    get:
      summary: Get a todo by order number
      parameters:
        - name: order_number
          in: path
          description: Order number of the todo
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ToDoGet'
        404:
          description: Todo not found

    put:
      summary: Update a todo by order number
      parameters:
        - name: order_number
          in: path
          description: Order number of the todo
          required: true
          type: integer
          format: int32
        - name: todo
          in: body
          description: Updated ToDo object
          required: true
          schema:
            $ref: '#/definitions/ToDoUpdate'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ToDoGet'
        404:
          description: Todo not found

    delete:
      summary: Delete a todo by order number
      parameters:
        - name: order_number
          in: path
          description: Order number of the todo
          required: true
          type: integer
          format: int32
      responses:
        204:
          description: Successful operation
        404:
          description: Todo not found

  /todos/{order_number}/patch:
    patch:
      summary: Update specific fields of a todo by order number
      parameters:
        - name: order_number
          in: path
          description: Order number of the todo
          required: true
          type: integer
          format: int32
        - name: todo
          in: body
          description: Fields to be updated in the ToDo object
          required: true
          schema:
            $ref: '#/definitions/ToDoPatch'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ToDoGet'
        404:
          description: Todo not found

definitions:
  ToDoGet:
    type: object
    required:
      - last_update_date
      - creation_date
      - order_number
      - title
      - description
      - due_date
      - status
    properties:
      order_number:
        type: integer
        format: int32
      title:
        type: string
      description:
        type: string
      creation_date:
        type: string
        format: date-time
      last_update_date:
        type: string
        format: date-time
      due_date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - in_backlog
          - in_progress
          - blocked
          - completed
  ToDoPost:
    type: object
    required:
      - title
    properties:
      order_number:
        type: integer
        format: int32
      title:
        type: string
      description:
        type: string
      due_date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - in_backlog
          - in_progress
          - blocked
          - completed

  ToDoPatch:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      due_date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - in_backlog
          - in_progress
          - blocked
          - completed

  ToDoUpdate:
    type: object
    required:
      - title
      - description
      - due_date
      - status
    properties:
      title:
        type: string
      description:
        type: string
      due_date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - in_backlog
          - in_progress
          - blocked
          - completed
